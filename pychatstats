#!/usr/bin/env python2
'''
Produces PNG graphs that display chat activity for a given user and period.

(c) 2012, 2013 Carlos E. Torchia <ctorchia87@gmail.com>

This software is licensed under the GNU GPL v2.
It can be distributed freely under certain conditions; see fsf.org.
There is no warranty, use at your own risk.
'''

import time
import sys
import optparse

import chat_stats

__DEFAULT_LOG_DIR__ = '.'

def Main():
    '''
    Main method
    '''
    command, options = ParseArgs()

    chat_stats.log_dir = options.log_dir

    if 'get_usernames' == command:
        if options.username or options.start_date or options.end_date:
            print >>sys.stderr, 'Username or length are not allowed.'
            return 1

        usernames = chat_stats.GetUsernames()
        print '\n'.join(usernames)

    elif 'chart_by_hour' == command:
        if not options.username:
            print >>sys.stderr, 'Username is required.'
            return 1
        else:
            username = options.username

        if (type(options.start_date) is str):
            start_time = time.mktime(time.strptime(options.start_date,
                                                   '%Y-%m-%d'))
        else:
            start_time = options.start_date

        if (type(options.end_date) is str):
            end_time = time.mktime(time.strptime(options.end_date,
                                                 '%Y-%m-%d')) + 86399
        else:
            end_time = options.end_date

        print chat_stats.GetUserHoursPNG(username, start_time, end_time)

    else:
        print >>sys.stderr, 'Unknown command %s' % command
        return 1

def ParseArgs():
    '''
    Read command line arguments
    '''
    usage = '''%prog [options] <command>

Commands:
  get_usernames - Gets list of distinct usernames present in log files
  chart_by_hour - Outputs a PNG image of a chart with number of minutes online
                  for each hour of the day'''
    opt_parser = optparse.OptionParser(usage=usage)
    opt_parser.add_option('-u', '--username', dest='username',
                          default=None,
                          help='username for whom to report activity')
    opt_parser.add_option('-s', '--start-date', dest='start_date',
                          default=None, # Default is beginning of time
                          help='Start date from which to report activity')
    opt_parser.add_option('-e', '--end-date', dest='end_date',
                          default=(),   # Default is end of time
                          help='End date from which to report activity')
    opt_parser.add_option('-d', '--log-dir', dest='log_dir',
                          default=__DEFAULT_LOG_DIR__,
                          help='directory to search for logs in (default %s)' % __DEFAULT_LOG_DIR__)
    options, args = opt_parser.parse_args()

    if len(args) != 1:
        opt_parser.print_usage()
        sys.exit(1)

    command = args[0]

    return command, options

if __name__ == '__main__':
    sys.exit(Main())
